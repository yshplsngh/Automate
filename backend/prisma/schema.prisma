generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                 String             @id @default(uuid())
    email              String?            @unique
    password           String?
    name               String?
    avatar_url         String?
    created_at         DateTime           @default(now())
    updated_at         DateTime           @updatedAt
    identity_providers IdentityProvider[]
    workspaces         Workspace[]
}

model IdentityProvider {
    id            String    @id @default(uuid())
    user_id       String
    provider      String
    provider_id   String // Unique ID from provider (e.g., Google sub, GitHub id)
    email         String?
    access_token  String
    refresh_token String?
    scopes        String[] // Array of permissions 
    expires_at    DateTime?
    created_at    DateTime  @default(now())
    updated_at    DateTime  @updatedAt

    user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model Workspace {
    id          String   @id @default(cuid())
    name        String
    description String?
    owner       User     @relation(fields: [owner_id], references: [id])
    owner_id    String
    jobs        Job[]
    created_at  DateTime @default(now())
    updated_at  DateTime @updatedAt
}

model Job {
    id           String    @id @default(cuid())
    name         String
    description  String?
    workspace    Workspace @relation(fields: [workspace_id], references: [id])
    workspace_id String
    data         Json
    created_at   DateTime  @default(now())
    updated_at   DateTime  @updatedAt
}
